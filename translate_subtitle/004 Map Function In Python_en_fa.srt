1
00:00:00,000 --> 00:00:00,000
سلام بچه ها

2
00:00:00,000 --> 00:00:03,000
بنابراین ما می خواهیم بحث خود را در رابطه با پایتون ادامه دهیم.

3
00:00:03,000 --> 00:00:06,000
و در این ویدیو قصد داریم در مورد عملکرد نقشه صحبت کنیم.

4
00:00:06,000 --> 00:00:07,000
باشه

5
00:00:07,000 --> 00:00:09,000
بنابراین دقیقاً تابع نقشه چیست.

6
00:00:09,000 --> 00:00:16,000
یک تابع داده شده را برای همه موارد موجود در یک لیست ورودی یا هر قابل تکرار دیگر اعمال می کند و a را برمی گرداند

7
00:00:16,000 --> 00:00:18,000
شیء نقشه یک تکرار کننده.

8
00:00:18,000 --> 00:00:22,000
این به ویژه برای تبدیل داده ها در فهرست به طور جامع مفید است.

9
00:00:22,000 --> 00:00:25,000
حالا، اوه، بهترین مثال برای نشان دادن آن به شما.

10
00:00:25,000 --> 00:00:27,000
چرا دقیقاً از نقشه استفاده می کنیم؟

11
00:00:27,000 --> 00:00:29,000
اجازه دهید من بروم و یک کد برای شما بنویسم.

12
00:00:29,000 --> 00:00:30,000
باشه

13
00:00:30,000 --> 00:00:38,000
بنابراین بیایید بگوییم اوه، اوه، من فقط یک روش را تعریف می کنم که به عنوان مربع نامیده می شود.

14
00:00:38,000 --> 00:00:38,000
باشه

15
00:00:38,000 --> 00:00:45,000
بنابراین کاری که مربع انجام می دهد این است که یک ورودی می گیرد و فقط ضرب می شود.

16
00:00:45,000 --> 00:00:51,000
یا یک مربع از آن ورودی خاص را انجام می دهد یا آن را در خودش ضرب می کند و به ما می دهد

17
00:00:51,000 --> 00:00:52,000
نتیجه

18
00:00:52,000 --> 00:00:52,000
باشه

19
00:00:52,000 --> 00:00:58,000
بنابراین، اگر من ادامه دهم و سعی کنم هر عددی را در اینجا قرار دهم، فرض کنید مربع چهار چیزی جز 16 نیست.

20
00:00:58,000 --> 00:01:03,000
اگر جلوتر بروم و مربع ده را مربع کنم، باید همین الان 100 بگیرم.

21
00:01:03,000 --> 00:01:04,000
اینجا خوبه

22
00:01:04,000 --> 00:01:05,000
خیلی ساده است.

23
00:01:05,000 --> 00:01:07,000
من فقط یک ورودی می دهم و مربع آن را انجام می دهم.

24
00:01:07,000 --> 00:01:08,000
باشه

25
00:01:08,000 --> 00:01:16,000
حالا بیایید بگوییم اگر من یک لیست از اعداد دارم یا فرض کنید که من یک اعداد دارم، اوه، به شکل لیست،

26
00:01:16,000 --> 00:01:18,000
یا می تواند به صورت تاپلی باشد.

27
00:01:18,000 --> 00:01:22,000
فرض کنید در این مورد خاص من همه این شماره ها 12345678 را دارم.

28
00:01:22,000 --> 00:01:22,000
باشه

29
00:01:23,000 --> 00:01:29,000
حالا می‌خواهم همان عملیات را برای هر عدد اعمال کنم.

30
00:01:29,000 --> 00:01:33,000
یک راه این است که من احتمالاً لیست را مستقیماً در اینجا ارائه می کنم.

31
00:01:33,000 --> 00:01:35,000
سپس من ممکن است یک حلقه for قرار دهم، درست است؟

32
00:01:35,000 --> 00:01:40,000
من از طریق تک تک عناصر تکرار می کنم و سپس احتمالاً، می دانید، ضرب را انجام می دهم و اضافه می کنم

33
00:01:40,000 --> 00:01:41,000
در یک لیست جداگانه

34
00:01:41,000 --> 00:01:42,000
درسته؟

35
00:01:42,000 --> 00:01:45,000
بنابراین برای انجام این عملیات خاص باید خیلی کارها را درست انجام دهم.

36
00:01:45,000 --> 00:01:50,000
من باید یک لیست خالی ایجاد کنم و دوباره عملیات الحاق را در داخل آن تکرار کنم

37
00:01:50,000 --> 00:01:51,000
این عناصر خاص

38
00:01:51,000 --> 00:01:57,000
حالا به‌جای انجام همه این کارها، می‌دانید که می‌توانیم مستقیماً از نقشه استفاده کنیم

39
00:01:57,000 --> 00:01:59,000
به شما نشان می دهد که نقشه معمولاً چه چیزی را می گیرد.

40
00:01:59,000 --> 00:01:59,000
باشه

41
00:02:00,000 --> 00:02:03,000
اکنون می خواهم این عملیات را روی همه این عناصر انجام دهم.

42
00:02:03,000 --> 00:02:07,000
بنابراین نقشه معمولاً دو پارامتر ورودی را می گیرد.

43
00:02:07,000 --> 00:02:11,000
یکی نام تابع و یکی تکرارپذیر است.

44
00:02:11,000 --> 00:02:13,000
Iterable در اصل به معنای درست مجموعه است.

45
00:02:13,000 --> 00:02:16,000
بنابراین در این مورد خاص اگر من نقشه را فراخوانی کنم.

46
00:02:16,000 --> 00:02:18,000
بنابراین اولین پارامتری که می خواهم ارائه دهم مربع است.

47
00:02:18,000 --> 00:02:20,000
بنابراین مربع تابع من است.

48
00:02:20,000 --> 00:02:22,000
من حتی مجبور نیستم از براکت در اینجا استفاده کنم.

49
00:02:22,000 --> 00:02:25,000
و دومین چیزی که باید بدهم تکرارپذیری من است.

50
00:02:25,000 --> 00:02:26,000
این اعداد من است.

51
00:02:26,000 --> 00:02:31,000
بنابراین اگر من به جلو بروم و این را در اینجا اجرا کنم، می توانید ببینید که یک شی نقشه در این مورد ایجاد کرده است

52
00:02:31,000 --> 00:02:31,000
مکان حافظه

53
00:02:31,000 --> 00:02:35,000
حالا از آنجایی که می خواهم تمام مقادیر را به صورت لیست بگوییم.

54
00:02:35,000 --> 00:02:39,000
بنابراین من فقط پیش می روم و این را به یک لیست تبدیل می کنم.

55
00:02:39,000 --> 00:02:41,000
بنابراین اگر من این را به یک لیست تبدیل کنم.

56
00:02:41,000 --> 00:02:44,000
بنابراین در اینجا می توانید خروجی را ببینید.

57
00:02:44,000 --> 00:02:47,000
در حال حاضر کاری که قرار است انجام دهد این است که هر عدد را می گیرد.

58
00:02:47,000 --> 00:02:51,000
نقشه قرار است هر شماره را بگیرد، این تابع خاص را فراخوانی کنید.

59
00:02:51,000 --> 00:02:55,000
و اوه، اساساً فقط برای هر عدد، فقط در حال حاضر مربع را انجام می دهد اگر من

60
00:02:55,000 --> 00:02:57,000
برو جلو و جواب را ببین

61
00:02:57,000 --> 00:03:00,000
بنابراین این اساساً فهرست من در اینجا می شود.

62
00:03:00,000 --> 00:03:04,000
بنابراین من باید از این براکت استفاده کنم زیرا اوه خوب است.

63
00:03:04,000 --> 00:03:06,000
حالا بیایید جلو برویم و این را ببینیم.

64
00:03:06,000 --> 00:03:10,000
بنابراین در اینجا می توانید برای هر عدد 149 16، 2536، 49، 64 را ببینید.

65
00:03:10,000 --> 00:03:12,000
فقط هر عدد را مجذور کرده است.

66
00:03:12,000 --> 00:03:16,000
بنابراین این یک مثال اساسی از استفاده از نقشه است.

67
00:03:16,000 --> 00:03:16,000
درسته

68
00:03:16,000 --> 00:03:20,000
بنابراین یک تابع داده شده را برای همه موارد در یک لیست ورودی اعمال می کند.

69
00:03:20,000 --> 00:03:25,000
مثلاً در این مورد خاص، فهرست است یا می‌تواند هر تکراری دیگری باشد.

70
00:03:25,000 --> 00:03:26,000
خوب حالا این شگفت انگیز است.

71
00:03:26,000 --> 00:03:28,000
بگذارید فقط عملکردهای بیشتری را به شما نشان دهم.

72
00:03:28,000 --> 00:03:32,000
و این بار از تابع Lambda با نقشه اوکی استفاده خواهم کرد.

73
00:03:32,000 --> 00:03:35,000
تابع لامبدا با نقشه و مشخصا تابع لامبدا.

74
00:03:35,000 --> 00:03:39,000
شما می دانید که اگر یک عبارت واحد وجود داشته باشد، می توانید ادامه دهید و لامبدا را اعمال کنید.

75
00:03:39,000 --> 00:03:40,000
باشه

76
00:03:40,000 --> 00:03:41,000
بنابراین من همان عملیات را انجام خواهم داد.

77
00:03:41,000 --> 00:03:44,000
بنابراین بیایید بگوییم این شماره های من مشکلی ندارد.

78
00:03:44,000 --> 00:03:46,000
حالا چطوری اپلای کنم

79
00:03:46,000 --> 00:03:50,000
به جای این تابع خاص، من تابع لامبدا را اعمال می کنم و اعداد نامی مشابهی را می دهم.

80
00:03:50,000 --> 00:03:52,000
بنابراین دوباره پیش می روم و لیست می نویسم.

81
00:03:52,000 --> 00:03:54,000
و در اینجا می خواهم از تابع نقشه استفاده کنم.

82
00:03:54,000 --> 00:03:57,000
اولین پارامتر تابع لامبدا من خواهد بود.

83
00:03:57,000 --> 00:04:00,000
تابع لامبدا چیزی نیست جز یک تابع ناشناس.

84
00:04:00,000 --> 00:04:02,000
بنابراین من فقط پیش می روم و لامبدا می نویسم.

85
00:04:02,000 --> 00:04:05,000
حالا چه نوع عملیاتی است که من واقعاً می خواهم انجام دهم؟

86
00:04:05,000 --> 00:04:10,000
بنابراین آرگومان ورودی یک آزمایشگر خواهد بود، فرض کنید هر آزمایشگر.

87
00:04:10,000 --> 00:04:13,000
و در اینجا من فقط x را در x درست ضرب می کنم.

88
00:04:13,000 --> 00:04:18,000
و این تمام تابع لامبدا من است در حال حاضر پارامتر دوم چیزی جز اعداد من نیست

89
00:04:18,000 --> 00:04:18,000
که لیست من است

90
00:04:18,000 --> 00:04:22,000
حالا اگر من آن را در اینجا اجرا کنم، می توانید با کمک تابع لامبدا ببینید.

91
00:04:22,000 --> 00:04:24,000
همچنین ما قادر به اجرای این OK هستیم.

92
00:04:24,000 --> 00:04:27,000
در حال حاضر این نیز بسیار ساده بسیار آسان است.

93
00:04:27,000 --> 00:04:29,000
در اینجا می توانید هر نوع عملیاتی را بنویسید.

94
00:04:29,000 --> 00:04:31,000
فرض کنید من می خواهم فقط ده اضافه کنم.

95
00:04:31,000 --> 00:04:32,000
میخوام 100 تا اضافه کنم

96
00:04:32,000 --> 00:04:36,000
من می‌خواهم تقسیم ضرب را انجام دهم، هر کاری که بتوانم انجام دهم، واقعاً می‌توانم انجام دهم

97
00:04:36,000 --> 00:04:36,000
برای انجام آن

98
00:04:36,000 --> 00:04:37,000
باشه

99
00:04:37,000 --> 00:04:38,000
حالا این را بگوییم.

100
00:04:39,000 --> 00:04:39,000
باشه خوبه

101
00:04:39,000 --> 00:04:40,000
این خوب است.

102
00:04:40,000 --> 00:04:41,000
باشه

103
00:04:41,000 --> 00:04:43,000
آیا می توانیم چندین تکرار را نگاشت کنیم.

104
00:04:43,000 --> 00:04:48,000
حال سوال این است که آیا می توانیم چندین تکرار را نگاشت کنیم؟

105
00:04:48,000 --> 00:04:49,000
باشه

106
00:04:49,000 --> 00:04:51,000
و این همان چیزی است که ما در اینجا در مورد آن صحبت خواهیم کرد.

107
00:04:51,000 --> 00:04:53,000
بنابراین اجازه دهید من ادامه دهم و اعداد یک را بنویسم.

108
00:04:53,000 --> 00:04:55,000
شماره یک.

109
00:04:55,000 --> 00:04:57,000
و در اینجا من فقط 123 را ایجاد می کنم.

110
00:04:57,000 --> 00:04:59,000
و بعد من فقط می خواهم بنویسم.

111
00:05:00,000 --> 00:05:01,000
اعداد.

112
00:05:01,000 --> 00:05:04,000
اعداد دو که برابر با چهار است.

113
00:05:04,000 --> 00:05:05,000
کاما پنج.

114
00:05:05,000 --> 00:05:06,000
کاما شش.

115
00:05:06,000 --> 00:05:06,000
باشه

116
00:05:07,000 --> 00:05:13,000
اکنون، از آنجایی که من دو جدول در اینجا دارم، و کاری که واقعاً می‌خواهم انجام دهم این است که هر عنصر را در نظر بگیرم

117
00:05:13,000 --> 00:05:15,000
از این جدول و به اضافه کردن هر دوی آنها ادامه دهید.

118
00:05:15,000 --> 00:05:20,000
فرض کنید خروجی نهایی من باید لیستی از عناصر باشد که در آن عنصر اول و دوم را اضافه خواهم کرد

119
00:05:20,000 --> 00:05:21,000
عنصر و عنصر سوم

120
00:05:21,000 --> 00:05:24,000
بنابراین پاسخ نهایی من باید پنج هفت، نه باشد.

121
00:05:24,000 --> 00:05:28,000
خوب، پس می توانم با کمک نقشه و تابع لامبدا این کار را انجام دهم.

122
00:05:28,000 --> 00:05:33,000
بنابراین در اینجا من فقط می‌روم و اعداد زیرخط اضافه‌شده را درست می‌کنم.

123
00:05:33,000 --> 00:05:37,000
و در اینجا من می خواهم به جلو رفته و از نقشه استفاده کنم.

124
00:05:38,000 --> 00:05:40,000
همراه با آن، من از تابع لامبدا استفاده خواهم کرد.

125
00:05:40,000 --> 00:05:43,000
فرض کنید می خواهم دو پارامتر را درست بگیرم.

126
00:05:43,000 --> 00:05:44,000
این یک پارامتر خواهد بود.

127
00:05:44,000 --> 00:05:45,000
این پارامتر دیگر خواهد بود.

128
00:05:45,000 --> 00:05:47,000
بنابراین من فقط جلو می روم و از x کاما y استفاده می کنم.

129
00:05:47,000 --> 00:05:50,000
و اکنون بیان من بسیار ساده خواهد بود.

130
00:05:50,000 --> 00:05:52,000
من فقط قصد دارم هر دو این اعداد را اضافه کنم.

131
00:05:52,000 --> 00:05:59,000
بنابراین باید x به اضافه y باشد.

132
00:05:59,000 --> 00:06:01,000
بنابراین شماره یک من خواهد بود.

133
00:06:01,000 --> 00:06:02,000
حالا پارامتر دوم

134
00:06:02,000 --> 00:06:04,000
همچنین من در واقع می توانم حق بدهم.

135
00:06:04,000 --> 00:06:06,000
بنابراین پارامتر دوم لیست بعدی من خواهد بود.

136
00:06:06,000 --> 00:06:09,000
بنابراین در اینجا من فقط می خواهم به جلو بروید و شماره دو را بچسبانم.

137
00:06:09,000 --> 00:06:14,000
و این همه باید به لیست تبدیل شود.

138
00:06:14,000 --> 00:06:17,000
و حالا اگر بروم و اعداد اضافه شده ام را چاپ کنم.

139
00:06:18,000 --> 00:06:22,000
بنابراین در اینجا می توانید ببینید که من می توانم پنج کاما هفت کاما نه را بگیرم.

140
00:06:22,000 --> 00:06:22,000
درسته

141
00:06:22,000 --> 00:06:25,000
بنابراین این یک مثال شگفت انگیز است.

142
00:06:25,000 --> 00:06:30,000
اوه مستقیماً آه آنچه که من در حال حاضر انجام می دهم چندین چیز وجود دارد که می توانیم با نقشه انجام دهیم.

143
00:06:30,000 --> 00:06:32,000
بیایید یک عملیات دیگر را به شما نشان دهیم.

144
00:06:32,000 --> 00:06:44,000
بنابراین در اینجا اکنون سعی می کنم از نقشه برای تبدیل لیست رشته ها به اعداد صحیح استفاده کنم.

145
00:06:44,000 --> 00:06:48,000
حالا بیایید بگوییم که من کل این کد را دارم، خوب، فقط این کد را به شما نشان می دهم.

146
00:06:48,000 --> 00:06:49,000
خیلی ساده

147
00:06:49,000 --> 00:06:51,000
بنابراین در اینجا شماره های رشته من است.

148
00:06:51,000 --> 00:06:53,000
کاری که من در واقع انجام می دهم، فقط نقشه را اعمال می کنم.

149
00:06:53,000 --> 00:06:55,000
تابع int خواهد بود.

150
00:06:55,000 --> 00:07:00,000
بنابراین تایپ کست اساساً روی تمام اعداد زیرخط رشته ای انجام می شود که به شکل است

151
00:07:00,000 --> 00:07:01,000
فهرست

152
00:07:01,000 --> 00:07:04,000
و در اینجا می توانید ببینید که من قادر به دریافت خروجی خواهم بود.

153
00:07:04,000 --> 00:07:09,000
بنابراین گزینه های زیادی وجود دارد که می توانید به طور خاص با کمک نقشه uh انجام دهید.

154
00:07:09,000 --> 00:07:15,000
دوباره می توانید از تابع داخلی مانند int مانند uh string dot بالای یا هر چیزی که واقعاً می خواهید استفاده کنید

155
00:07:15,000 --> 00:07:15,000
انجام دادن

156
00:07:15,000 --> 00:07:19,000
و یک چیز که باید مطمئن شوید هر زمان که از تابع استفاده می کنید من مجبور نیستم از هیچ براکتی استفاده کنم.

157
00:07:19,000 --> 00:07:20,000
درسته

158
00:07:20,000 --> 00:07:24,000
بنابراین تابع لامبدا که من مربع نامیده‌ام را مربع نامیده‌ام، قبلاً در اینجا تعریف شده است.

159
00:07:24,000 --> 00:07:25,000
من مجبور نیستم از هیچ براکتی استفاده کنم.

160
00:07:25,000 --> 00:07:26,000
باشه

161
00:07:26,000 --> 00:07:31,000
حالا اجازه دهید یک مثال دیگر را به شما نشان دهم که چگونه می توانم تابع داخلی را با آن اعمال کنم

162
00:07:31,000 --> 00:07:32,000
کمک نقشه

163
00:07:32,000 --> 00:07:35,000
پس بیایید بگوییم اینها حرف های من است.

164
00:07:35,000 --> 00:07:37,000
اولین کلمه سیب است.

165
00:07:37,000 --> 00:07:40,000
و بیایید بگوییم که همه اینها در شخصیت کوچکتر هستند.

166
00:07:40,000 --> 00:07:41,000
بعد من موز دارم.

167
00:07:41,000 --> 00:07:44,000
بعد من گیلاس دارم.

168
00:07:44,000 --> 00:07:44,000
باشه

169
00:07:45,000 --> 00:07:49,000
حالا کاری که من واقعاً می‌خواهم انجام دهم، فقط می‌خواهم کلمات بالای خود را ایجاد کنم.

170
00:07:49,000 --> 00:07:54,000
و در اینجا من می خواهم از لیست نقشه استفاده کنم.

171
00:07:54,000 --> 00:07:59,000
و اکنون می دانم که در رشته متدی وجود دارد که به آن نقطه بالایی می گویند.

172
00:07:59,000 --> 00:08:05,000
و من باید این نقطه str را روی هر کلمه اعمال کنم.

173
00:08:05,000 --> 00:08:06,000
درسته

174
00:08:06,000 --> 00:08:07,000
بنابراین من فقط جلو می روم و کلمات را می نویسم.

175
00:08:07,000 --> 00:08:17,000
بنابراین وقتی این کار را انجام دادم و یک بار که کلمات زیر خط بالای خود را چاپ کردم، می‌توانم این را ببینم.

176
00:08:17,000 --> 00:08:20,000
ببینید سیب موز و گیلاس آنجاست.

177
00:08:20,000 --> 00:08:20,000
باشه

178
00:08:21,000 --> 00:08:24,000
اوه، بگذارید فقط یک کار دیگر انجام دهم.

179
00:08:24,000 --> 00:08:28,000
یک چیز دیگر، اوه، بهترین چیز، اوه، در اینجا، بیایید به فهرستی از فرهنگ لغت اعمال کنیم.

180
00:08:28,000 --> 00:08:30,000
بیایید یک تابع نقشه را به لیستی از فرهنگ لغت اعمال کنیم.

181
00:08:30,000 --> 00:08:34,000
بنابراین من به جلو می روم و یک تابع ایجاد می کنم که می گوید نام زیر خط بگیرید.

182
00:08:34,000 --> 00:08:34,000
باشه

183
00:08:34,000 --> 00:08:37,000
بنابراین در اینجا من فرهنگ لغت خود را خوب می دهم.

184
00:08:37,000 --> 00:08:38,000
این شخص یک فرهنگ لغت خواهد بود.

185
00:08:38,000 --> 00:08:45,000
و من شخص به نام را خوب برمی گردم.

186
00:08:45,000 --> 00:08:48,000
حالا این برای یک مورد فرهنگ لغت خوب است.

187
00:08:48,000 --> 00:08:51,000
اما اگر فهرستی از آیتم های فرهنگ لغت داشته باشم چه می شود.

188
00:08:51,000 --> 00:08:55,000
بیایید بگوییم که من فهرستی از آیتم های فرهنگ لغت دارم که در اینجا تعریف می کنم.

189
00:08:55,000 --> 00:08:57,000
پس بیایید بگوییم من جلوتر می روم و مردم را می نویسم.

190
00:08:57,000 --> 00:09:06,000
و اوه، اجازه دهید سریع بروم و اینجا را تعریف کنم، و اجازه دهید بروم و کولون نام را بنویسم.

191
00:09:06,000 --> 00:09:07,000
باشه

192
00:09:07,000 --> 00:09:13,000
و اوه، نام اساساً سن کاما خواهد بود.

193
00:09:15,000 --> 00:09:16,000
سن چیزی نخواهد بود.

194
00:09:16,000 --> 00:09:18,000
اما کولون 32.

195
00:09:18,000 --> 00:09:19,000
باشه

196
00:09:19,000 --> 00:09:24,000
بنابراین این اولین، اوه، دو، اوه، مورد نام یا مورد من خواهد بود.

197
00:09:24,000 --> 00:09:30,000
و سپس اجازه دهید من ادامه دهم و بگویم نام کولون برابر با جک است.

198
00:09:31,000 --> 00:09:31,000
باشه

199
00:09:31,000 --> 00:09:36,000
و بعد من 33 سال سن دارم خوب.

200
00:09:36,000 --> 00:09:38,000
بنابراین این دومین مورد من خواهد بود.

201
00:09:38,000 --> 00:09:43,000
اکنون می‌خواهم این کار را نه تنها برای یک آیتم، بلکه برای همه موارد انجام دهم.

202
00:09:43,000 --> 00:09:44,000
درسته

203
00:09:44,000 --> 00:09:46,000
بنابراین بیایید بگوییم که من فقط دو مورد را در اینجا گرفته ام.

204
00:09:46,000 --> 00:09:47,000
حالا چطوری انجامش بدم؟

205
00:09:47,000 --> 00:09:48,000
اول از همه از لیست استفاده خواهم کرد.

206
00:09:48,000 --> 00:09:50,000
سپس از نقشه استفاده خواهم کرد.

207
00:09:50,000 --> 00:09:53,000
اولین تابع نقشه دریافت نام زیرخط خواهد بود.

208
00:09:53,000 --> 00:09:54,000
باشه

209
00:09:54,000 --> 00:09:57,000
سپس من این را برای کل تکراری خود اعمال خواهم کرد.

210
00:09:57,000 --> 00:09:59,000
و در اینجا فهرستی از اقلام فرهنگ لغت را دارم.

211
00:09:59,000 --> 00:09:59,000
درسته

212
00:09:59,000 --> 00:09:59,000
بنابراین.

213
00:09:59,000 --> 00:10:04,000
اگر من ادامه دهم و خروجی را اینجا ببینم، می توانید از این دو رکوردی که کریستین ژاک را بررسی کرده ام، ببینید.

214
00:10:04,000 --> 00:10:06,000
و در قالب لیست به من داده می شود.

215
00:10:07,000 --> 00:10:07,000
درسته

216
00:10:07,000 --> 00:10:11,000
اوه، این یکی از چیزهای شگفت انگیز است که می توانید در اینجا ببینید.

217
00:10:12,000 --> 00:10:17,000
اوم، و اوه، در پایان روز، اوه، اگر بخواهید می توانید حتی چندین تابع را اعمال کنید.

218
00:10:17,000 --> 00:10:21,000
شما می توانید چندین تابع ایجاد کنید، به همان لیست عناصر اعمال کنید.

219
00:10:21,000 --> 00:10:27,000
بنابراین در پایان، آه، اگر من واقعاً بخواهم در مورد نقشه صحبت کنم، اوه، پس اینجا، اوه، یک چیز این است که

220
00:10:27,000 --> 00:10:30,000
نقشه استفاده می شود اوه، آن را در مکان های مختلف استفاده می شود.

221
00:10:30,000 --> 00:10:33,000
بنابراین من فقط یک نوع نتیجه گیری را در اینجا ارائه می کنم.

222
00:10:34,000 --> 00:10:38,000
بنابراین تابع نقشه ابزار قدرتمندی برای اعمال تبدیل به ساختارهای داده قابل تکرار است.

223
00:10:38,000 --> 00:10:43,000
می توان آن را با توابع معمولی تابع لامبدا، حتی تکرارهای متعدد، ارائه یک کارکرد همه کاره استفاده کرد

224
00:10:43,000 --> 00:10:45,000
رویکرد پردازش داده در پایتون

225
00:10:45,000 --> 00:10:48,000
بنابراین با درک استفاده از نقشه، می توانید کدهای کارآمدتر و خواناتری بنویسید.

226
00:10:48,000 --> 00:10:54,000
بنابراین، می‌دانید که در موارد تنها یک خط بدون تکرار کاملاً کارآمد است.

227
00:10:54,000 --> 00:10:56,000
شما از این ساختارهای داده کارآمد خاص استفاده می کنید.

228
00:10:56,000 --> 00:11:01,000
و در پایان روز، فقط باید مطمئن شوید که کد شما خواناتر است.

229
00:11:01,000 --> 00:11:04,000
کارایی وجود دارد، عملکرد با توجه به این وجود دارد.

230
00:11:04,000 --> 00:11:05,000
بنابراین امیدوارم از این ویدیوی خاص خوشتان بیاید.

231
00:11:05,000 --> 00:11:07,000
این در مورد عملکرد نقشه ها بود.

232
00:11:07,000 --> 00:11:08,000
همه شما را در ویدیوی بعدی می بینم.

233
00:11:08,000 --> 00:11:08,000
متشکرم.

