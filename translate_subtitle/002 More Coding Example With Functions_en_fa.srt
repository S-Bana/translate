1
00:00:00,000 --> 00:00:00,000
سلام بچه ها

2
00:00:00,000 --> 00:00:03,000
بنابراین ما قصد داریم بحث را در رابطه با پایتون ادامه دهیم.

3
00:00:03,000 --> 00:00:06,000
و اکنون ما قصد داریم برخی از نمونه ها را قبلاً ببینیم.

4
00:00:06,000 --> 00:00:10,000
در ویدیوی قبلی ما موضوعات زیادی در مورد توابع uh دیدیم.

5
00:00:10,000 --> 00:00:12,000
و اوه، بسیاری از موضوعات پیشرفته هستند که قرار است بیایند.

6
00:00:12,000 --> 00:00:17,000
اما قبل از آن فکر کردم، چرا چند مثال ایجاد نکنیم و به شما نشان ندهم که چگونه می‌توانیم آن‌ها را حل کنیم.

7
00:00:17,000 --> 00:00:18,000
درسته

8
00:00:18,000 --> 00:00:22,000
بنابراین اولین مثال در اینجا این است که ما باید یک تابع برای تبدیل دما ایجاد کنیم.

9
00:00:22,000 --> 00:00:27,000
بنابراین تبدیل دما اساساً به این معنی است که ما باید درجه سانتیگراد را به فارنهایت یا فارنهایت به

10
00:00:27,000 --> 00:00:27,000
درجه سانتیگراد

11
00:00:27,000 --> 00:00:29,000
بنابراین چگونه یک تابع را تعریف کنیم.

12
00:00:29,000 --> 00:00:30,000
ما جلوتر می رویم و می بینیم.

13
00:00:30,000 --> 00:00:32,000
پس بیایید جلو برویم و این مثال را ببینیم.

14
00:00:32,000 --> 00:00:34,000
بنابراین اول از همه من جلو خواهم رفت و عملکرد خود را ایجاد می کنم.

15
00:00:34,000 --> 00:00:37,000
فرض کنید من می نویسم تبدیل دمای زیر خط.

16
00:00:37,000 --> 00:00:40,000
بنابراین این عملکرد من در اینجا است.

17
00:00:40,000 --> 00:00:46,000
و در اینجا دو پارامتر را می دهم یکی دما و یکی واحدی است که واقعاً می خواهم آن را تبدیل کنم

18
00:00:46,000 --> 00:00:46,000
آن را

19
00:00:46,000 --> 00:00:52,000
فرض کنید اگر واحد را در اینجا به صورت c بدهم، اساساً به این معنی است که باید این را تبدیل کنم، اوه، این

20
00:00:52,000 --> 00:00:55,000
کل دما از سلسیوس تا فارنهایت.

21
00:00:55,000 --> 00:00:56,000
درسته

22
00:00:56,000 --> 00:00:59,000
و اگر واحد را F بدهم، درست است.

23
00:00:59,000 --> 00:01:03,000
بنابراین من باید دما را از فارنهایت به سانتیگراد تبدیل کنم، درست است.

24
00:01:03,000 --> 00:01:06,000
بنابراین اجازه دهید من فقط پیش بروم و یک مدرک ارائه کنم.

25
00:01:06,000 --> 00:01:07,000
بنابراین این تابع.

26
00:01:09,000 --> 00:01:21,000
تبديل دما بين سانتيگراد و فارنهايت خوب است.

27
00:01:21,000 --> 00:01:27,000
بنابراین اوه این چیزی است که تعریف من از این عملکرد خاص در اینجا وجود دارد.

28
00:01:27,000 --> 00:01:30,000
و اوه، ما ادامه می دهیم و کد خود را می نویسیم.

29
00:01:30,000 --> 00:01:30,000
درسته

30
00:01:30,000 --> 00:01:36,000
بنابراین در اینجا فرض کنید من ادامه می دهم و می نویسم اگر واحد برابر با C بزرگ باشد یا خیر.

31
00:01:36,000 --> 00:01:41,000
اگر من این واحد خاص را بدهم، اساساً به این معنی است که باید دمای خود را از سانتیگراد تبدیل کنم

32
00:01:41,000 --> 00:01:41,000
به فارنهایت

33
00:01:41,000 --> 00:01:45,000
بنابراین من می خواهم برگردم، اوه، درجه حرارت ضربدر.

34
00:01:45,000 --> 00:01:47,000
و من عملیات را نه در پنج انجام خواهم داد.

35
00:01:47,000 --> 00:01:48,000
باشه

36
00:01:48,000 --> 00:01:51,000
و در اینجا اجازه دهید فقط براکت را نه در پنج بدهم.

37
00:01:51,000 --> 00:01:52,000
اوه اوه

38
00:01:52,000 --> 00:01:52,000
متاسفم

39
00:01:52,000 --> 00:01:54,000
من باید اول از همه، آن را ضرب کنم.

40
00:01:54,000 --> 00:01:57,000
سپس من ادامه می دهم و اضافه 32 را انجام می دهم.

41
00:01:57,000 --> 00:02:03,000
بنابراین این فرمول تبدیل یک سانتیگراد به فارنهایت با توجه به درجه حرارت خوب است.

42
00:02:03,000 --> 00:02:05,000
بنابراین این فرمول ساده ای است که ما به طور خاص از آن استفاده می کنیم.

43
00:02:05,000 --> 00:02:13,000
و این به نوبه خود باعث تبدیل درجه سانتیگراد به فارنهایت می شود.

44
00:02:13,000 --> 00:02:20,000
فارنهایت خارجی باشه پس اوه، بذار برم جلو و الیف بنویسم.

45
00:02:20,000 --> 00:02:20,000
باشه

46
00:02:20,000 --> 00:02:24,000
بنابراین در اینجا ما از همه چیز استفاده می کنیم، هر چیز که یاد گرفته اید، فرض کنید برخی از آنها وجود دارد

47
00:02:24,000 --> 00:02:28,000
نمونه هایی که در آن از دیکشنری ها استفاده خواهم کرد، چند نمونه که در آن از دیکشنری ها استفاده خواهم کرد، لیست و

48
00:02:28,000 --> 00:02:29,000
همه

49
00:02:29,000 --> 00:02:32,000
در این مورد خاص، احتمالاً می توانید ببینید که من از if Elif نیز استفاده می کنم.

50
00:02:32,000 --> 00:02:33,000
درسته

51
00:02:33,000 --> 00:02:38,000
بنابراین اگر، اوه، الیف، واحد برابر با فارنهایت است.

52
00:02:38,000 --> 00:02:40,000
خوب، پس من اساساً برمی گردم.

53
00:02:40,000 --> 00:02:41,000
باشه

54
00:02:41,000 --> 00:02:48,000
و برای این دمای خاص، اول از همه باید منهای 32 و سپس آن را در ضرب کنم

55
00:02:48,000 --> 00:02:49,000
پنج در نه

56
00:02:50,000 --> 00:02:50,000
باشه

57
00:02:50,000 --> 00:02:55,000
و این اساساً فارنهایت ما را به درجه سانتیگراد می رساند.

58
00:02:55,000 --> 00:02:55,000
درسته

59
00:02:55,000 --> 00:02:56,000
پس این فرمول است.

60
00:02:56,000 --> 00:03:02,000
اگر ادامه دهید و جستجوی گوگل را نیز برای تبدیل درجه سانتیگراد به فارنهایت انجام دهید.

61
00:03:02,000 --> 00:03:04,000
بنابراین این فرمولی است که معمولاً دریافت می کنید.

62
00:03:04,000 --> 00:03:04,000
باشه

63
00:03:04,000 --> 00:03:07,000
پس اوه همین.

64
00:03:07,000 --> 00:03:08,000
این همان چیزی است که درست است.

65
00:03:08,000 --> 00:03:14,000
و اگر من هیچ اطلاعاتی برای پارامتر سوم خود ندهم، باید آن را نیز مدیریت کنیم.

66
00:03:14,000 --> 00:03:15,000
این در صورتی است که من هیچ واحدی نمی دهم.

67
00:03:15,000 --> 00:03:17,000
بنابراین من فقط می روم و برمی گردم.

68
00:03:17,000 --> 00:03:18,000
هیچکدوم خوبه

69
00:03:18,000 --> 00:03:19,000
هیچ کدام

70
00:03:20,000 --> 00:03:20,000
پس هیچکدام.

71
00:03:20,000 --> 00:03:23,000
بنابراین در اینجا من می خواهم اساسا از این تابع استفاده کنم.

72
00:03:23,000 --> 00:03:26,000
حالا اجازه دهید من ادامه دهم و این تابع را به عنوان تبدیل دما صدا کنم.

73
00:03:26,000 --> 00:03:32,000
و اگر جلو بروم و مانند یک مقدار بنویسم، مثلا دما را 25 می دهم.

74
00:03:32,000 --> 00:03:32,000
درسته

75
00:03:32,000 --> 00:03:34,000
و این بر حسب سانتیگراد است.

76
00:03:34,000 --> 00:03:35,000
درسته

77
00:03:35,000 --> 00:03:38,000
اوه پس من می‌روم و آن را چاپ می‌کنم.

78
00:03:38,000 --> 00:03:38,000
درسته

79
00:03:38,000 --> 00:03:41,000
و من اساسا تبدیل خواهم شد.

80
00:03:41,000 --> 00:03:45,000
ما این را از 29 درجه سانتیگراد به فارنهایت تبدیل می کنیم.

81
00:03:45,000 --> 00:03:48,000
مورد بعدی که در واقع قرار است انجام دهم چاپ است.

82
00:03:48,000 --> 00:03:48,000
باشه

83
00:03:48,000 --> 00:03:52,000
دوباره من به جلو می روم و دمای تبدیل خود را صدا می زنم.

84
00:03:52,000 --> 00:03:56,000
و در اینجا من در واقع 77 کاما F را می دهم.

85
00:03:56,000 --> 00:03:57,000
درسته

86
00:03:57,000 --> 00:03:58,000
و این من قادر به دریافت پاسخ خواهم بود.

87
00:03:58,000 --> 00:04:00,000
ببینیم کار میکنه یا نه

88
00:04:00,000 --> 00:04:07,000
بله 25 چیزی نیست جز 77 درجه فارنهایت و 77 درجه فارنهایت چیزی جز 25 درجه سانتیگراد نیست.

89
00:04:07,000 --> 00:04:08,000
بنابراین تبدیل به این صورت انجام می شود.

90
00:04:08,000 --> 00:04:11,000
و من احساس می کنم که این فرمول کاملا درست است.

91
00:04:11,000 --> 00:04:11,000
کاری که ما درست انجام داده ایم.

92
00:04:12,000 --> 00:04:16,000
اوم، و در اینجا شما فقط می توانید ببینید بر اساس واحدهایی که ما قادر به انجام آن هستیم.

93
00:04:16,000 --> 00:04:18,000
پس این اولین مثال ماست.

94
00:04:18,000 --> 00:04:23,000
اوم، اکنون کاری که من واقعاً می‌خواهم انجام دهم این است که یک مثال شگفت‌انگیز دیگر را به شما نشان می‌دهم

95
00:04:23,000 --> 00:04:26,000
به عنوان بررسی کننده قدرت رمز عبور نامیده می شود.

96
00:04:26,000 --> 00:04:26,000
باشه

97
00:04:26,000 --> 00:04:28,000
حالا این دقیقا چیه؟

98
00:04:28,000 --> 00:04:31,000
اوه، بیایید بگوییم که ما در حال ایجاد شناسه کاربری یا ورود به سیستم خود هستیم.

99
00:04:31,000 --> 00:04:34,000
و در آنجا ما به طور خاص رمز عبور می دهیم.

100
00:04:34,000 --> 00:04:34,000
درسته

101
00:04:34,000 --> 00:04:38,000
و باز هم اکثر مردم رمز عبور را 12345 می نویسند.

102
00:04:38,000 --> 00:04:41,000
بنابراین ما باید یک بررسی رمز عبور قوی داشته باشیم.

103
00:04:41,000 --> 00:04:46,000
بنابراین من برخی از چک را در اینجا به شما می دهم تا متوجه شوید که آیا این چک ضعیف است یا خیر

104
00:04:46,000 --> 00:04:49,000
رمز عبور یا یک رمز عبور واقعی یا یک رمز عبور بسیار قوی.

105
00:04:49,000 --> 00:04:50,000
درسته

106
00:04:50,000 --> 00:04:55,000
بنابراین اول از همه، من ادامه می دهم و تعریف خود را رمز عبور قوی می نویسم.

107
00:04:55,000 --> 00:04:59,000
بنابراین این تابع مسئول بررسی قوی بودن رمز عبور خواهد بود.

108
00:04:59,000 --> 00:05:01,000
هنر خوب نیست

109
00:05:02,000 --> 00:05:05,000
بنابراین در اینجا می توانید ببینید که من فقط پیش می روم و مدارکم را می نویسم.

110
00:05:05,000 --> 00:05:13,000
این تابع بررسی می کند که آیا رمز عبور قوی است یا نه.

111
00:05:13,000 --> 00:05:15,000
مم باشه

112
00:05:16,000 --> 00:05:21,000
حالا اجازه بدهید جلوتر بروم و بنویسم اجازه دهید بگوییم شرط اول که اولین معیار را می خواهم با احترام بگذارم

113
00:05:21,000 --> 00:05:22,000
به رمز عبور

114
00:05:22,000 --> 00:05:25,000
رمز عبور من باید حداقل هشت کاراکتر باشد.

115
00:05:25,000 --> 00:05:25,000
درسته

116
00:05:25,000 --> 00:05:34,000
بنابراین من ادامه می دهم و می نویسم که اگر طول رمز عبور کمتر از هشت باشد کمتر از هشت باشد.

117
00:05:34,000 --> 00:05:39,000
بنابراین این اساساً به این معنی است که من فقط می خواهم بگویم، سلام، این رمز عبور بسیار بدی است به طور خلاصه.

118
00:05:39,000 --> 00:05:44,000
بنابراین من فقط ادامه می دهم و می گویم false، زیرا این، اوه، عملکردی که من در واقع ایجاد می کنم اساساً

119
00:05:44,000 --> 00:05:46,000
بررسی اینکه آیا رمز عبور قوی است یا خیر.

120
00:05:46,000 --> 00:05:48,000
بنابراین در حال حاضر رمز عبور قوی نیست.

121
00:05:48,000 --> 00:05:49,000
بنابراین من نادرست برمی گردم.

122
00:05:49,000 --> 00:05:52,000
سپس اجازه دهید من ادامه دهم و یک شرط دیگر را بنویسم.

123
00:05:52,000 --> 00:05:53,000
اگر خوب نیست.

124
00:05:53,000 --> 00:05:57,000
بنابراین اگر نه یک شرط است اگر نه مشکلی ندارد.

125
00:05:57,000 --> 00:06:02,000
بنابراین در اینجا ما فقط می خواهیم ببینیم که آیا این شخصیت دارای رقمی است یا خیر.

126
00:06:02,000 --> 00:06:03,000
درسته

127
00:06:03,000 --> 00:06:07,000
هر کاراکتری، هر رمز عبوری که به طور خاص می دهیم، خواه دارای هر رقمی باشد یا

128
00:06:07,000 --> 00:06:07,000
نه

129
00:06:07,000 --> 00:06:08,000
درسته

130
00:06:08,000 --> 00:06:14,000
بنابراین، کاری که من در واقع انجام خواهم داد، در غیر این صورت، اساساً مانند مقایسه این است که آیا وجود ندارد یا خیر

131
00:06:14,000 --> 00:06:15,000
یا نه

132
00:06:15,000 --> 00:06:15,000
درسته

133
00:06:15,000 --> 00:06:16,000
یه همچین چیزی

134
00:06:16,000 --> 00:06:20,000
بنابراین من ادامه می دهم و از حلقه for برای کاراکتر در رمز عبور استفاده می کنم.

135
00:06:20,000 --> 00:06:23,000
بنابراین ما به جلو می رویم و تک تک شخصیت ها را می بینیم.

136
00:06:23,000 --> 00:06:28,000
و در اینجا من فقط جلو می روم و می بینم که آیا این شخصیت رقمی دارد یا خیر.

137
00:06:28,000 --> 00:06:28,000
باشه

138
00:06:28,000 --> 00:06:34,000
بنابراین هر رقم تابعی است که در هر کاراکتر یا رشته وجود دارد، درست است.

139
00:06:34,000 --> 00:06:39,000
بنابراین من فقط قصد دارم برای هر کاراکتر در این رمز عبور خاص مقایسه کنم، خواه داشتن یک

140
00:06:39,000 --> 00:06:39,000
رقمی یا نه

141
00:06:39,000 --> 00:06:40,000
درسته

142
00:06:40,000 --> 00:06:43,000
اگر هیچ رقمی وجود ندارد درست است.

143
00:06:43,000 --> 00:06:45,000
پس کاری که انجام خواهم داد دوباره نادرست برمی گردم.

144
00:06:45,000 --> 00:06:46,000
باشه

145
00:06:46,000 --> 00:06:50,000
لطفا با دقت ببینید از چه نوع شرایطی استفاده می کنم.

146
00:06:50,000 --> 00:06:50,000
درسته

147
00:06:50,000 --> 00:06:55,000
بنابراین این دقیقاً مانند هر تابع یا یک تابع داخلی است که در پایتون وجود دارد.

148
00:06:55,000 --> 00:06:58,000
و ما در حال تکرار از طریق تک تک کاراکترهای آن رمز عبور هستیم.

149
00:06:58,000 --> 00:07:00,000
و داریم می بینیم که رقمی است یا خیر.

150
00:07:00,000 --> 00:07:01,000
درسته

151
00:07:01,000 --> 00:07:05,000
و این رقم است نوعی تابع است که به صورت رشته ای موجود است.

152
00:07:05,000 --> 00:07:05,000
باشه

153
00:07:05,000 --> 00:07:07,000
بنابراین این یکی از بررسی هایی است که من واقعاً می خواهم انجام دهم.

154
00:07:07,000 --> 00:07:08,000
درسته

155
00:07:08,000 --> 00:07:12,000
سپس من نیز بررسی می شود با توجه به رمز عبور پایین تر است.

156
00:07:12,000 --> 00:07:19,000
اگر همه کاراکترها پایین‌تر هستند، باید آن را نادرست برگردانیم و بگوییم که دقیقاً اینطور نیست

157
00:07:19,000 --> 00:07:20,000
یک رمز عبور خوب، درست است؟

158
00:07:20,000 --> 00:07:21,000
بنابراین من ادامه می دهم و می نویسم.

159
00:07:21,000 --> 00:07:22,000
اگر نه.

160
00:07:22,000 --> 00:07:25,000
باز هم ادامه می دهم و شرایط بعدی ام را می نویسم.

161
00:07:25,000 --> 00:07:30,000
و در اینجا این بار من می گویم سلام برای گربه و رمز عبور.

162
00:07:30,000 --> 00:07:32,000
و در اینجا می خواهم بررسی کنم.

163
00:07:32,000 --> 00:07:32,000
درسته؟

164
00:07:32,000 --> 00:07:34,000
من چیزی هستم که باید اینجا چک کنم.

165
00:07:34,000 --> 00:07:37,000
اینکه آیا شخصیت من پایین تر است.

166
00:07:37,000 --> 00:07:40,000
بنابراین low is low یکی از توابعی است که دوباره در پایتون وجود دارد.

167
00:07:40,000 --> 00:07:43,000
با عرض پوزش برای شخصیت در رمز عبور من باید بنویسم.

168
00:07:43,000 --> 00:07:44,000
باشه

169
00:07:44,000 --> 00:07:49,000
اوه، من فقط دارم بررسی می‌کنم که آیا شخصیت برای همه شخصیت‌های حاضر پایین‌تر است یا نه

170
00:07:49,000 --> 00:07:49,000
اونجا

171
00:07:49,000 --> 00:07:53,000
و اگر وجود داشته باشد، من فقط دروغ را برمی گردانم.

172
00:07:53,000 --> 00:07:53,000
باشه

173
00:07:54,000 --> 00:07:56,000
پس بچه ها، الان شرایط را هنوز اینجا نوشته ایم.

174
00:07:56,000 --> 00:08:00,000
ما همچنین بررسی کرده‌ایم، مثل اینکه همه کاراکترها نباید با حروف کوچک باشند.

175
00:08:00,000 --> 00:08:00,000
باشه

176
00:08:00,000 --> 00:08:07,000
حالا، اوه، به طور مشابه، همه کاراکترها نیز نباید بزرگ باشند، می دانید،

177
00:08:07,000 --> 00:08:09,000
و اوه، ما آن را نیز بررسی خواهیم کرد.

178
00:08:09,000 --> 00:08:09,000
درسته

179
00:08:09,000 --> 00:08:14,000
بنابراین در اینجا من قصد دارم برای نوشتن اگر، اگر نه در اگر نیست.

180
00:08:14,000 --> 00:08:17,000
و این بار از گربه استفاده خواهم کرد.

181
00:08:17,000 --> 00:08:19,000
نقطه بالا سمت راست است.

182
00:08:19,000 --> 00:08:25,000
بنابراین توابع زیادی در رابطه با رشته ها وجود دارد که من می توانم به طور خاص در اینجا از آنها استفاده کنم.

183
00:08:25,000 --> 00:08:30,000
و اجازه دهید من فقط پیش بروم و برای cat با رمز عبور بنویسم.

184
00:08:31,000 --> 00:08:37,000
و این را ادامه می دهیم و آن را بررسی می کنیم و دوباره می نویسیم return false okay.

185
00:08:37,000 --> 00:08:38,000
حالا این آنجاست.

186
00:08:38,000 --> 00:08:40,000
حالا بیایید به چیزهای بیشتری فکر کنیم.

187
00:08:40,000 --> 00:08:44,000
میدونی اوه بیایید ببینیم برای هر شخصیت خاص.

188
00:08:44,000 --> 00:08:51,000
بنابراین برای شخصیت خاص، اوه، من می خواهم بسیاری از شخصیت های خاص را اضافه کنم که احتمالاً وجود دارند،

189
00:08:51,000 --> 00:08:51,000
درست است.

190
00:08:51,000 --> 00:08:57,000
اگر هیچ، بیایید بگوییم در شخصیت ما، اگر شخصیت خاصی مانند این وجود ندارد، من هم می توانم

191
00:08:57,000 --> 00:09:01,000
بگو که، هی، این اساسا یک رمز عبور ضعیف است، درست است؟

192
00:09:01,000 --> 00:09:07,000
حداقل باید یک رقم بالایی داشته باشد، می دانید، حداقل باید یک رقم داشته باشد، می دانید، پس این

193
00:09:07,000 --> 00:09:08,000
نوعی شرایط

194
00:09:08,000 --> 00:09:11,000
بنابراین در اینجا من از همه کاراکترهای ویژه در اینجا برای کاراکتر در رمز عبور استفاده کرده ام.

195
00:09:11,000 --> 00:09:15,000
و سپس اگر وجود نداشته باشد، ما فقط false را برمی گردانیم.

196
00:09:15,000 --> 00:09:20,000
اگر همه چیز راضی باشد، ما جلو می رویم و به واقعیت باز می گردیم.

197
00:09:20,000 --> 00:09:21,000
باشه

198
00:09:21,000 --> 00:09:23,000
بنابراین در اینجا همه بازگشت نادرست وجود دارد.

199
00:09:23,000 --> 00:09:25,000
و سپس در اینجا بازگشت true وجود دارد.

200
00:09:25,000 --> 00:09:25,000
درسته

201
00:09:25,000 --> 00:09:30,000
بنابراین اگر همه این شرایط نادرست است، پس اوه، اگر همه این شرایط برآورده نشد، پس ما

202
00:09:30,000 --> 00:09:31,000
فقط قراره به واقعیت برگردن

203
00:09:31,000 --> 00:09:36,000
گفتن که سلام، این رمز عبور فوق العاده شگفت انگیز است و یک رمز عبور قوی است.

204
00:09:36,000 --> 00:09:38,000
حالا اجازه دهید من ادامه دهم و تابع را فراخوانی کنم.

205
00:09:38,000 --> 00:09:41,000
بنابراین فراخوانی تابع در اینجا اشکالی ندارد.

206
00:09:41,000 --> 00:09:45,000
و اجازه دهید من فقط برخی از چیزها را در اینجا ارائه دهم.

207
00:09:45,000 --> 00:09:45,000
درسته

208
00:09:45,000 --> 00:09:51,000
بنابراین من ادامه می دهم و می نویسم print ease underscore رمز عبور قوی.

209
00:09:51,000 --> 00:09:53,000
و بگذارید فقط یک مثال بزنم.

210
00:09:53,000 --> 00:09:55,000
فرض کنید من یک حرف بزرگ دارم.

211
00:09:55,000 --> 00:09:58,000
و من یک حرف کوچک دوباره یک حرف بزرگ خواهم نوشت.

212
00:09:58,000 --> 00:09:59,000
و این است.

213
00:09:59,000 --> 00:10:00,000
رمز عبور.

214
00:10:00,000 --> 00:10:05,000
خوب، اما در اینجا می توانید ببینید که من شخصیت خاصی ندارم یا، اوه، غیر از آن، من

215
00:10:05,000 --> 00:10:07,000
فکر کن همه چیز در حال راضی شدن است

216
00:10:07,000 --> 00:10:07,000
درسته؟

217
00:10:07,000 --> 00:10:11,000
و رقم نیز وجود ندارد، بنابراین قطعاً باید برای این موضوع نادرست دریافت کنم.

218
00:10:11,000 --> 00:10:16,000
یک راه دیگر این است که من می توانم ادامه دهم و چاپ کنم رمز عبور قوی است.

219
00:10:16,000 --> 00:10:20,000
و اجازه دهید من ادامه دهم و از چند شخصیت خاص استفاده کنم.

220
00:10:20,000 --> 00:10:26,000
بنابراین من به جلو می روم و str را می نویسم و ​​اجازه می دهم فقط جلو بروم و در اینجا از uh zero استفاده کنم.

221
00:10:26,000 --> 00:10:27,000
باشه

222
00:10:27,000 --> 00:10:33,000
و من از ng بزرگ P w d استفاده خواهم کرد و اجازه دهید از یک کاراکتر خاص مانند تعجب استفاده کنم.

223
00:10:33,000 --> 00:10:34,000
باشه

224
00:10:34,000 --> 00:10:36,000
حالا بیایید ببینیم که آیا هر دوی آنها.

225
00:10:36,000 --> 00:10:39,000
من فکر می کنم این اساساً باید به من غلط بدهد.

226
00:10:39,000 --> 00:10:40,000
و این باید به من حقیقت بدهد.

227
00:10:40,000 --> 00:10:41,000
باشه

228
00:10:41,000 --> 00:10:46,000
بنابراین حالا اگر این را اینجا اجرا کنم، می توانید ببینید چون رقم یا کاراکتر خاصی ندارم، من هستم

229
00:10:46,000 --> 00:10:47,000
در واقع در اینجا دروغ می شود.

230
00:10:47,000 --> 00:10:52,000
من هم یک رقم و هم یک شخصیت خاص دارم.

231
00:10:52,000 --> 00:10:56,000
بنابراین و این دلیلی است که من در اینجا یک حرف بزرگ دارم.

232
00:10:56,000 --> 00:10:57,000
پس این دلیلی است که من به واقعیت تبدیل می شوم.

233
00:10:57,000 --> 00:11:02,000
بنابراین این یک مثال شگفت انگیز در رابطه با بررسی قدرت رمز عبور است.

234
00:11:02,000 --> 00:11:07,000
فقط با کمک یک تابع، ما می توانیم این نوع اعتبارسنجی را انجام دهیم و می توانیم

235
00:11:07,000 --> 00:11:08,000
برای اجرای آن

236
00:11:08,000 --> 00:11:09,000
باشه

237
00:11:09,000 --> 00:11:13,000
حالا بیایید با مثال سوم برویم.

238
00:11:13,000 --> 00:11:19,000
حالا این مثال خاص را انتخاب کردم، اوه، فقط برای اینکه مطمئن شوم که دوست دارم، اوه،

239
00:11:19,000 --> 00:11:21,000
چگونه در برنامه دنیای واقعی می توان از این استفاده کرد.

240
00:11:21,000 --> 00:11:26,000
بنابراین هزینه کل اقلام موجود در یک سبد خرید را محاسبه کنید.

241
00:11:26,000 --> 00:11:28,000
بنابراین در اینجا ما یک تابع را تعریف می کنیم.

242
00:11:28,000 --> 00:11:34,000
بنابراین من ادامه می دهم و می نویسم def محاسبه هزینه کل خط زیر خط.

243
00:11:35,000 --> 00:11:38,000
و در اینجا من سبد خریدم را خوب می دهم.

244
00:11:38,000 --> 00:11:43,000
حالا این سبد خرید اساساً دارای اقلام زیادی خواهد بود.

245
00:11:43,000 --> 00:11:46,000
و همچنین می توانیم به صورت دیکشنری بدهیم.

246
00:11:46,000 --> 00:11:52,000
بنابراین در حال حاضر من فقط می خواهم پاس را انجام دهم زیرا اول از همه می بینم که چه نوع داده هایی دارم.

247
00:11:52,000 --> 00:11:56,000
بنابراین اجازه دهید من ادامه دهم و برخی از نمونه های مربوط به داده های سبد خرید را به شما نشان دهم.

248
00:11:56,000 --> 00:12:02,000
و از آنجایی که ما قبلاً در مورد فرهنگ لغت یاد گرفته ایم، بنابراین پیش می رویم و می نویسیم سبد خرید برابر است با و

249
00:12:02,000 --> 00:12:05,000
ما یک لیست ایجاد می کنیم و این لیستی از فرهنگ لغت خواهد بود.

250
00:12:05,000 --> 00:12:05,000
باشه

251
00:12:05,000 --> 00:12:13,000
بنابراین بیایید بگوییم اولین مورد من چیزی شبیه به جفت‌های ارزش کلیدی است مانند نام برابر است با اوه.

252
00:12:13,000 --> 00:12:15,000
من اپل دارم اوکی

253
00:12:15,000 --> 00:12:17,000
بعد من قیمت دارم

254
00:12:19,000 --> 00:12:21,000
که برابر با 0.5 است.

255
00:12:22,000 --> 00:12:26,000
سپس من به طور خاص مقدار خوب است.

256
00:12:26,000 --> 00:12:29,000
و این مقدار برابر با چهار خواهد بود.

257
00:12:29,000 --> 00:12:29,000
باشه

258
00:12:30,000 --> 00:12:34,000
اوه حالا من ادامه خواهم داد و نمونه بعدی خود را ایجاد خواهم کرد.

259
00:12:34,000 --> 00:12:38,000
و بیایید بگوییم این نقطه 5 دلار من به این صورت خواهم نوشت.

260
00:12:38,000 --> 00:12:39,000
درسته

261
00:12:39,000 --> 00:12:40,000
بدیهی است.

262
00:12:40,000 --> 00:12:44,000
اوه، پس اجازه دهید من ادامه دهم و نامش موز باشد.

263
00:12:44,000 --> 00:12:50,000
قیمت نقطه 3 دلار خواهد بود، مثلاً مقدار را بگویم شش شش موز.

264
00:12:50,000 --> 00:12:51,000
این قیمت است.

265
00:12:51,000 --> 00:12:58,000
و اجازه دهید همین الان ادامه دهم و دوباره یک مورد دیگر را در اینجا اضافه کنم.

266
00:12:58,000 --> 00:13:02,000
اجازه دهید ادامه دهم و یکی دیگر مانند نارنجی بنویسم خب.

267
00:13:02,000 --> 00:13:08,000
قیمت نقطه هفت خواهد بود و مقدار را می توانم سه بنویسم خوب.

268
00:13:08,000 --> 00:13:10,000
بنابراین این سبد خرید من است.

269
00:13:10,000 --> 00:13:12,000
با احترام به تمام اقلامی که دارم.

270
00:13:12,000 --> 00:13:16,000
سپس من فقط جلو می روم و عملکردم را اینجا می نویسم.

271
00:13:16,000 --> 00:13:20,000
بنابراین اجازه دهید من ادامه دهم و یک متغیر موقت ایجاد کنم هزینه کل برابر با صفر است.

272
00:13:20,000 --> 00:13:22,000
اکنون تنها کاری که باید انجام دهم این است که باید کاوش کنم.

273
00:13:22,000 --> 00:13:25,000
من احتمالاً باید از طریق این هر گاری بگذرم.

274
00:13:25,000 --> 00:13:28,000
اوه، قیمت را بگیر

275
00:13:28,000 --> 00:13:28,000
باشه

276
00:13:28,000 --> 00:13:32,000
و ببینید، اوه، این قیمت اساسا برای یک مقدار است.

277
00:13:32,000 --> 00:13:33,000
باشه

278
00:13:33,000 --> 00:13:37,000
بنابراین ما به جلو می رویم و با این تعداد کمیت ضرب می کنیم.

279
00:13:37,000 --> 00:13:40,000
و دوباره باید داده ها را از این فرهنگ لغت خاص بازیابی کنیم.

280
00:13:40,000 --> 00:13:42,000
و سپس ما مجموع را به خوبی انجام خواهیم داد.

281
00:13:42,000 --> 00:13:46,000
بنابراین اکنون اجازه دهید من ادامه دهم و برای مورد در سبد خرید بنویسم و ​​بنویسم.

282
00:13:46,000 --> 00:13:48,000
بنابراین من ادامه خواهم داد و این را بررسی خواهم کرد.

283
00:13:49,000 --> 00:13:50,000
بنابراین من فقط ادامه می دهم و می نویسم.

284
00:13:50,000 --> 00:13:55,000
کل هزینه برابر یا به علاوه برابر با Okay است.

285
00:13:55,000 --> 00:13:58,000
بنابراین درست مانند یک عملیات افزایشی که در آن چیزی اضافه می کنیم.

286
00:13:58,000 --> 00:14:02,000
سپس در اینجا من قصد دارم برای نوشتن آیتم از قیمت خوب است.

287
00:14:02,000 --> 00:14:03,000
مورد قیمت.

288
00:14:03,000 --> 00:14:11,000
بنابراین این برای هر آیتم از قیمت، ما فقط می خواهیم با آیتم مقدار ضرب کنیم.

289
00:14:11,000 --> 00:14:14,000
بنابراین اجازه دهید من ادامه دهم و آن را بنویسم.

290
00:14:14,000 --> 00:14:16,000
سپس کل هزینه‌ام را می‌گیرم.

291
00:14:16,000 --> 00:14:19,000
پس من می توانم ادامه دهم و کل هزینه را برگردانم.

292
00:14:19,000 --> 00:14:25,000
بنابراین این تابع فقط قیمت را با توجه به همه مقدار برای هر یک ضرب می کند

293
00:14:25,000 --> 00:14:26,000
مورد

294
00:14:26,000 --> 00:14:28,000
حالا به سرعت اجازه دهید من بروم و تابع را صدا کنم.

295
00:14:28,000 --> 00:14:33,000
بنابراین در اینجا من قصد دارم برای فراخوانی تابع خوب بنویسم.

296
00:14:33,000 --> 00:14:39,000
و در اینجا می نویسم که هزینه کلی زیر خط برابر است با محاسبه هزینه کل.

297
00:14:39,000 --> 00:14:42,000
و در اینجا من می خواهم داده های خود را به عنوان سبد خرید بدهم.

298
00:14:42,000 --> 00:14:45,000
حالا بیایید جلو برویم و آن را اجرا کنیم. Shift enter را فشار می دهم.

299
00:14:46,000 --> 00:14:48,000
و اینجا اوه باشه

300
00:14:48,000 --> 00:14:52,000
اجازه دهید من ادامه دهم و این هزینه کل را چاپ کنم زیرا ما چیزی را نمایش نداده ایم.

301
00:14:52,000 --> 00:14:55,000
اکنون در اینجا می توانید 5.889 را ببینید.

302
00:14:55,000 --> 00:14:59,000
بنابراین این هزینه کل من است.

303
00:14:59,000 --> 00:15:02,000
با احترام به تمام اقلامی که من واقعاً خریدم خوب است.

304
00:15:02,000 --> 00:15:04,000
و این شگفت انگیز است.

305
00:15:04,000 --> 00:15:07,000
من می توانم کل هزینه کل سبد خریدم را ببینم.

306
00:15:07,000 --> 00:15:10,000
بنابراین در اینجا ما به تازگی یک تابع ایجاد کرده ایم که سبد خرید را می گیرد.

307
00:15:10,000 --> 00:15:12,000
اقلام و سبد خرید را می توان به عنوان فرهنگ لغت ارائه داد.

308
00:15:12,000 --> 00:15:14,000
هر چیزی را که واقعاً می خواهید فهرست کنید.

309
00:15:14,000 --> 00:15:17,000
سپس همه چیز را تکرار می کنیم و هزینه را محاسبه می کنیم.

310
00:15:18,000 --> 00:15:18,000
کامل.

311
00:15:18,000 --> 00:15:21,000
اوه، بیایید جلو برویم و یک مثال دیگر را ببینیم.

312
00:15:21,000 --> 00:15:26,000
اوه، این بار، کاری که ما اساساً در اینجا انجام می دهیم این است که بررسی می کنیم یا هستیم

313
00:15:26,000 --> 00:15:31,000
یک تابع ایجاد می‌کند که بررسی می‌کند آیا رشته‌ای palindrome است یا خیر.

314
00:15:31,000 --> 00:15:33,000
حالا پالیندروم اساساً به چه معناست؟

315
00:15:33,000 --> 00:15:37,000
بنابراین اگر فقط می خواهید در مورد پالیندروم درست بدانید.

316
00:15:37,000 --> 00:15:43,000
برخی از مثال‌ها، فرض کنید اگر از این رشته a b a استفاده کنید اگر آن را از جهت جلو بخوانید.

317
00:15:43,000 --> 00:15:44,000
ABBA است.

318
00:15:44,000 --> 00:15:48,000
اگر از جهت عقب بخوانی، باز هم فقط ABBA است، درست است؟

319
00:15:48,000 --> 00:15:50,000
بنابراین از جلو و عقب هر دو یکسان هستند.

320
00:15:50,000 --> 00:15:56,000
بسیار خوب، بنابراین ما اساساً یک تابع می نویسیم که بتواند هر رشته ای را بررسی کند

321
00:15:56,000 --> 00:16:01,000
چه از جلو برابر باشد و چه از پشت با توجه به شخصیت ها برابر باشد

322
00:16:01,000 --> 00:16:01,000
که ما داریم

323
00:16:01,000 --> 00:16:02,000
باید همینطور باشه

324
00:16:02,000 --> 00:16:03,000
باشه

325
00:16:03,000 --> 00:16:05,000
بنابراین در اینجا، اوه، اجازه دهید پیش برویم و یک تابع را تعریف کنیم.

326
00:16:05,000 --> 00:16:08,000
بنابراین می‌خواهم بنویسم که زیر خط پالیندروم است.

327
00:16:08,000 --> 00:16:11,000
بنابراین من فقط می روم و می نویسم.

328
00:16:11,000 --> 00:16:13,000
عملکرد من زیرخط پالیندروم است.

329
00:16:13,000 --> 00:16:16,000
و در اینجا من می خواهم به رشته ام اوکی بدهم.

330
00:16:16,000 --> 00:16:23,000
اکنون بهترین راه این است که هر رشته ای را که درست بین تمام فضاها بنویسم.

331
00:16:23,000 --> 00:16:24,000
اول از همه باید حذفش کنم

332
00:16:25,000 --> 00:16:26,000
بنابراین من رشته را می گیرم.

333
00:16:26,000 --> 00:16:30,000
من s dot را پایین تر می نویسم زیرا باید کم کردن همه کاراکترها را نیز انجام دهم.

334
00:16:30,000 --> 00:16:33,000
و اجازه دهید تمام رشته خالی را جایگزین کنم.

335
00:16:34,000 --> 00:16:34,000
باشه

336
00:16:34,000 --> 00:16:36,000
با یک رشته.

337
00:16:36,000 --> 00:16:36,000
درسته؟

338
00:16:36,000 --> 00:16:39,000
با مثل من فقط باید آن فضاهای خالی را حذف کنم.

339
00:16:40,000 --> 00:16:47,000
حال، بهترین راه برای انجام این کار این است که امیدوارم همه بدانند که در رشته ما در مورد،

340
00:16:47,000 --> 00:16:49,000
اوه، می دانید، عملیات برش و همه چیز.

341
00:16:49,000 --> 00:16:51,000
بنابراین من فقط پیش می روم و می نویسم دو نقطه.

342
00:16:51,000 --> 00:16:53,000
کولون منهای یک.

343
00:16:53,000 --> 00:16:53,000
باشه

344
00:16:53,000 --> 00:16:58,000
حالا، اگر این رشته باشد، اوه، اگر من هستم.

345
00:16:58,000 --> 00:17:02,000
ببینید، این چیزی است که من عکس یک رشته را دریافت می کنم، درست است.

346
00:17:02,000 --> 00:17:06,000
اگر من این کد خاص را می نویسم، فقط باید آن را با s خود مقایسه کنم.

347
00:17:06,000 --> 00:17:06,000
درسته

348
00:17:06,000 --> 00:17:11,000
بنابراین اگر جلو بروم و بنویسم s برابر برابر است، این یا درست یا نادرست خواهد بود.

349
00:17:11,000 --> 00:17:15,000
این اساساً برعکس این رشته خاص است، درست است.

350
00:17:15,000 --> 00:17:19,000
بنابراین اگر هر دو با هم برابر باشند، قطعاً می‌توان گفت که آن یک پالیندروم است.

351
00:17:19,000 --> 00:17:24,000
حالا بیایید جلوتر برویم و اینجا را ببینیم، من جلوتر می روم و به این پالیندروم می گویم.

352
00:17:24,000 --> 00:17:26,000
الان وارد گوگل شدم

353
00:17:26,000 --> 00:17:29,000
همچنین می توانید متن های مختلف uh مختلف را جستجو کنید.

354
00:17:29,000 --> 00:17:30,000
درسته

355
00:17:30,000 --> 00:17:34,000
بنابراین من از جمله ای استفاده می کنم که به آن یک مرد برنامه می گویند.

356
00:17:34,000 --> 00:17:35,000
اوه

357
00:17:36,000 --> 00:17:37,000
سرهنگ

358
00:17:38,000 --> 00:17:39,000
پاناما

359
00:17:39,000 --> 00:17:42,000
خوب، حالا اگر از اینجا بخوانید.

360
00:17:42,000 --> 00:17:42,000
درسته

361
00:17:42,000 --> 00:17:45,000
و اگر از عکس بخوانی تقریباً همینطور است.

362
00:17:45,000 --> 00:17:46,000
مردی را ببین

363
00:17:46,000 --> 00:17:46,000
درسته

364
00:17:46,000 --> 00:17:49,000
بنابراین اگر از یک مرد شروع شود.

365
00:17:49,000 --> 00:17:50,000
بنابراین اینجا نیز از عقب.

366
00:17:50,000 --> 00:17:54,000
اگر بخوانم مردی اینجاست.

367
00:17:54,000 --> 00:17:55,000
سپس دوباره یک طرح.

368
00:17:55,000 --> 00:17:58,000
بنابراین A به پایان رسیده است و برنامه هنوز هم درست است.

369
00:17:58,000 --> 00:18:01,000
بنابراین من اگر این جمله خاص را بخوانید معکوس است.

370
00:18:01,000 --> 00:18:02,000
باز هم تقریباً همان است.

371
00:18:02,000 --> 00:18:03,000
درسته

372
00:18:03,000 --> 00:18:04,000
پس بیایید پیش برویم و این را چاپ کنیم.

373
00:18:04,000 --> 00:18:09,000
و در مورد بعدی من فقط جلو می روم و یک جمله را می گیرم که پالیندروم نیست.

374
00:18:09,000 --> 00:18:11,000
پس اجازه دهید من بروم و سلام بنویسم.

375
00:18:11,000 --> 00:18:17,000
بنابراین در مورد hello من همان جمله را از سمت راست به جلو یا عقب ندارم.

376
00:18:17,000 --> 00:18:17,000
برابر نیست.

377
00:18:17,000 --> 00:18:21,000
بنابراین اول باید به من درست بدهد و سومی باید به من دروغ بدهد.

378
00:18:21,000 --> 00:18:22,000
بنابراین در اینجا می توانید ببینید که درست است.

379
00:18:22,000 --> 00:18:24,000
و مورد دوم اساساً نادرست است.

380
00:18:24,000 --> 00:18:28,000
بنابراین این یک مثال شگفت انگیز در رابطه با پالیندروم است.

381
00:18:28,000 --> 00:18:34,000
و فقط با استفاده از این عملیات برش رشته به راحتی می توانید آن را انجام دهید.

382
00:18:34,000 --> 00:18:35,000
باشه

383
00:18:35,000 --> 00:18:40,000
حالا مثال بعدی که اساساً می خواهیم ببینیم چیزی است که به آن فاکتوریل یک عدد می گویند

384
00:18:40,000 --> 00:18:41,000
با استفاده از بازگشت

385
00:18:41,000 --> 00:18:42,000
حال بازگشت چیست؟

386
00:18:42,000 --> 00:18:48,000
بازگشت چیزی نیست، اما من اگر یک تابع ایجاد کنم، آن تابع در داخل بدنه آن تابع است

387
00:18:48,000 --> 00:18:49,000
بارها و بارها فراخوانی خواهد شد.

388
00:18:49,000 --> 00:18:50,000
باشه

389
00:18:50,000 --> 00:18:53,000
و اگر در مورد فاکتوریل صحبت کنم، فرض کنید می خواهم پنج فاکتوریل را محاسبه کنم.

390
00:18:53,000 --> 00:18:59,000
پس چیزی نیست جز پنج به چهار به سه به دو به یک.

391
00:18:59,000 --> 00:18:59,000
درسته

392
00:18:59,000 --> 00:19:02,000
بنابراین این اساساً عملکرد هر فاکتوریل است.

393
00:19:02,000 --> 00:19:03,000
درسته

394
00:19:03,000 --> 00:19:06,000
بنابراین باید تابعی بنویسم که فاکتوریل باشد.

395
00:19:06,000 --> 00:19:09,000
و فرض کنید من فاکتوریل را برای پنج درست داده ام.

396
00:19:09,000 --> 00:19:16,000
بنابراین شرط اول این خواهد بود که اگر n درست برابر با صفر باشد، کاری که باید انجام دهم، فقط باید انجام دهم

397
00:19:16,000 --> 00:19:17,000
یکی را به راست برگردان

398
00:19:17,000 --> 00:19:20,000
چون پنج به چهار در سه به یک درست است.

399
00:19:20,000 --> 00:19:21,000
بنابراین سه به دو به یک.

400
00:19:21,000 --> 00:19:22,000
باید همینطور باشد.

401
00:19:22,000 --> 00:19:24,000
اگر از پنج شروع کنم باید تا یک تمام شود.

402
00:19:24,000 --> 00:19:28,000
بنابراین اگر n صفر شود، باید فقط یک ok را برگردانم.

403
00:19:28,000 --> 00:19:36,000
در غیر این صورت من ادامه می دهم و فقط از یک بازگشت ساده n ضرب در فاکتوریل n منهای یک استفاده می کنم.

404
00:19:36,000 --> 00:19:37,000
درسته

405
00:19:37,000 --> 00:19:41,000
بنابراین در اینجا من این تابع خاص را درست می نامم.

406
00:19:41,000 --> 00:19:43,000
بنابراین در ابتدا اگر پنج حق را بدهم.

407
00:19:43,000 --> 00:19:44,000
پس چه خواهد شد.

408
00:19:44,000 --> 00:19:45,000
این شرط کاذب خواهد شد.

409
00:19:45,000 --> 00:19:49,000
بنابراین فقط جلو می رود و پنج ضرب در فاکتوریل چهار می نویسد.

410
00:19:49,000 --> 00:19:51,000
سپس دوباره فاکتوریل چهار.

411
00:19:51,000 --> 00:19:56,000
هنگامی که آن را نامیده می شود، چهار به فاکتوریل از سه، سپس سه به فاکتوریل از دو، سپس

412
00:19:56,000 --> 00:19:59,000
دو به فاکتوریل یک، سپس یک به فاکتوریل صفر.

413
00:19:59,000 --> 00:20:02,000
وقتی صفر آمد، یک را برگردانید، بنابراین در یک ضرب می شود، درست است؟

414
00:20:02,000 --> 00:20:06,000
بنابراین حالا اگر من فقط پیش بروم و تابع را فراخوانی کنم، چیزی نخواهد بود.

415
00:20:06,000 --> 00:20:10,000
اما من فقط می توانم ادامه دهم و با توجه به پنج فاکتوریل بنویسم.

416
00:20:10,000 --> 00:20:13,000
و در اینجا می توانید ببینید که این خروجی من است.

417
00:20:13,000 --> 00:20:16,000
اگر من برای شش فاکتوریل بخواهم این خروجی است.

418
00:20:16,000 --> 00:20:18,000
در اینجا می توانید ببینید که من می توانم آن را درست انجام دهم.

419
00:20:18,000 --> 00:20:20,000
و این همان چیزی است که بازگشت نامیده می شود.

420
00:20:20,000 --> 00:20:24,000
در بازگشت درون یک تابع شما همان تابع را فراخوانی می کنید.

421
00:20:24,000 --> 00:20:27,000
مگر اینکه و تا زمانی که بر اساس این شرط به اجرا ادامه خواهد داد.

422
00:20:27,000 --> 00:20:28,000
باشه

423
00:20:29,000 --> 00:20:31,000
اوه، پس دو تا دیگر وجود دارد.

424
00:20:31,000 --> 00:20:34,000
یک تابع برای خواندن یک فایل و شمارش فراوانی کلمه مثال بزنید.

425
00:20:34,000 --> 00:20:39,000
خوب، می دانم که هنوز در مورد عملکرد فایل بحث زیادی نکرده ام.

426
00:20:39,000 --> 00:20:40,000
باشه

427
00:20:40,000 --> 00:20:44,000
اما من واقعاً می خواهم به شما لایک کنم، فرض کنید که من یک فایل در اینجا دارم.

428
00:20:44,000 --> 00:20:47,000
نمونه متن من دو خط کد نوشته ام.

429
00:20:47,000 --> 00:20:48,000
سلام دنیا

430
00:20:48,000 --> 00:20:48,000
چطوری؟

431
00:20:48,000 --> 00:20:49,000
اسم من کریش است.

432
00:20:49,000 --> 00:20:50,000
باشه

433
00:20:50,000 --> 00:20:55,000
اوه، همانطور که جلوتر می رویم، بیشتر در مورد خواندن فایل و انجام عملیات فایل بحث خواهیم کرد.

434
00:20:55,000 --> 00:21:00,000
اما در اینجا من فقط می خواهم به شما یک مثال بزنم، مانند اینکه چگونه می توانیم یک تابع برای این ایجاد کنیم، این کار را انجام دهیم

435
00:21:00,000 --> 00:21:01,000
باشه

436
00:21:01,000 --> 00:21:02,000
پس اول از همه چه خواهم کرد.

437
00:21:02,000 --> 00:21:08,000
اوه، بنابراین وظیفه من در اینجا بسیار ساده است، سعی می کنم یک فایل را بخوانم و تعداد دفعات هر کلمه را بشمارم.

438
00:21:08,000 --> 00:21:08,000
درسته

439
00:21:08,000 --> 00:21:10,000
بنابراین هر کلمه چند بار وجود دارد؟

440
00:21:10,000 --> 00:21:11,000
باشه

441
00:21:11,000 --> 00:21:18,000
بنابراین به سرعت ما ادامه می دهیم و تعداد تعریف تعداد زیر خط کلمه فرکانس زیرخط را می نویسیم.

442
00:21:19,000 --> 00:21:22,000
و حالا من فقط می‌خواهم مسیر فایلم را بگویم.

443
00:21:23,000 --> 00:21:27,000
اوه بهترین راه برای خواندن مسیر فایل با استفاده از تابع باز است.

444
00:21:27,000 --> 00:21:32,000
تابع Open در پایتون وجود دارد که می توانید به طور خاص از هر نوع فایلی استفاده کرده و باز کنید.

445
00:21:33,000 --> 00:21:35,000
بنابراین من ادامه می دهم و تعداد کلمات زیر خط را می نویسم.

446
00:21:35,000 --> 00:21:38,000
و من می دانم که چون باید فراوانی هر کلمه را بشمارم.

447
00:21:38,000 --> 00:21:40,000
بنابراین من به یک دیکشنری در اینجا نیاز دارم.

448
00:21:40,000 --> 00:21:42,000
بنابراین این یک فرهنگ لغت خالی خواهد بود.

449
00:21:42,000 --> 00:21:47,000
حالا من ادامه می دهم و با open my file مسیر underscore می نویسم.

450
00:21:47,000 --> 00:21:50,000
و این در حالت خواندن من باز می شود.

451
00:21:50,000 --> 00:21:53,000
بنابراین برای حالت خواندن من آن را به صورت رشته ای می دهم.

452
00:21:53,000 --> 00:21:58,000
و همچنین مانند حالت نوشتن و همه مواردی که در جلسات آینده مورد بحث قرار خواهند گرفت نیز وجود دارد.

453
00:21:58,000 --> 00:22:01,000
و سپس ما به جلو می رویم و به عنوان فایل می نویسیم.

454
00:22:01,000 --> 00:22:04,000
سپس پیش می رویم و برای خط در فایل می نویسیم.

455
00:22:04,000 --> 00:22:04,000
باشه

456
00:22:05,000 --> 00:22:11,000
و اوه، ما فقط می خواهیم بنویسیم کلمات برابر است با تقسیم نقطه خط خوب است.

457
00:22:12,000 --> 00:22:13,000
تقسیم نقطه خط.

458
00:22:13,000 --> 00:22:17,000
بنابراین ما آن را بر اساس کاراکترهای خط جدید تقسیم می کنیم.

459
00:22:17,000 --> 00:22:23,000
ما در حال بررسی این فایل خاص با توجه به آن هستیم.

460
00:22:23,000 --> 00:22:28,000
حالا به محض اینکه کلمات را به درستی دریافت کنم، زمانی که ما با استفاده از این خط خاص کد، دریافت خواهیم کرد

461
00:22:28,000 --> 00:22:34,000
کلمات زیرا هر فاصله ای که سعی می کند آن را محاسبه کند آن را تقسیم می کند و همه این کلمات را بازیابی می کند.

462
00:22:34,000 --> 00:22:35,000
باشه

463
00:22:35,000 --> 00:22:37,000
حالا به محض دریافت کلمات، کاری که من انجام خواهم داد این است.

464
00:22:37,000 --> 00:22:40,000
من ادامه خواهم داد و برای کلمات در کلمه می نویسم.

465
00:22:40,000 --> 00:22:41,000
باشه

466
00:22:41,000 --> 00:22:48,000
و در اینجا من اساساً می خواهم بنویسم کلمه برابر است با کلمه نقطه پایین تر.

467
00:22:48,000 --> 00:22:49,000
باشه

468
00:22:49,000 --> 00:22:50,000
بنابراین من قصد دارم عملیات پایین را انجام دهم.

469
00:22:50,000 --> 00:22:55,000
اول از همه، من واقعاً باید برای همه کلمات کوچک کنم.

470
00:22:55,000 --> 00:22:55,000
باشه

471
00:22:55,000 --> 00:23:01,000
سپس اوه، فرض کنید می‌خواهم احتمالاً عملیات نوار نقطه‌ای را انجام دهم.

472
00:23:01,000 --> 00:23:02,000
باشه

473
00:23:02,000 --> 00:23:05,000
و اگر در مورد نوار نقطه نمی دانید، اوه، می توانید درک کنید.

474
00:23:05,000 --> 00:23:12,000
هر زمان که من هر کلمه خاصی می گویم، باید بتواند بر اساس هر نوع شخصیتی تقسیم شود، زیرا

475
00:23:12,000 --> 00:23:13,000
من به تک تک کلمات نیاز دارم.

476
00:23:13,000 --> 00:23:19,000
بنابراین من از برخی کاراکترهای خاص مانند دو نقطه، علامت تعجب و همه چیز استفاده خواهم کرد.

477
00:23:19,000 --> 00:23:22,000
من از این حتی، اوم، همانطور که باید استفاده خواهم کرد.

478
00:23:22,000 --> 00:23:24,000
همچنین باید h e را نیز جداگانه تقسیم کند.

479
00:23:24,000 --> 00:23:24,000
درسته

480
00:23:24,000 --> 00:23:26,000
بنابراین دلیلی که من این را نیز بیان کرده ام همین است.

481
00:23:26,000 --> 00:23:29,000
و اگر همه چیز تعجب باشد، سعی می کنم آن را از بین ببرم.

482
00:23:29,000 --> 00:23:31,000
و اوه، من سعی خواهم کرد کلمه خوب را دریافت کنم.

483
00:23:31,000 --> 00:23:37,000
سپس من فقط پیش می روم و کلمه شمارش را می نویسم و ​​آن کلمه خاص را می گیرم.

484
00:23:37,000 --> 00:23:38,000
باشه

485
00:23:38,000 --> 00:23:39,000
لطفا روی منطق تمرکز کنید.

486
00:23:39,000 --> 00:23:40,000
باشه

487
00:23:40,000 --> 00:23:41,000
منطق خیلی مهمه

488
00:23:41,000 --> 00:23:44,000
و منطق، وقتی به تمرین ادامه می دهید بهتر می شوید.

489
00:23:44,000 --> 00:23:48,000
سپس می‌خواهم تعداد کلمات زیر خط را بنویسم.

490
00:23:48,000 --> 00:23:52,000
و در اینجا من قصد دارم کلمه کاما صفر را بنویسم.

491
00:23:53,000 --> 00:23:55,000
باشه کلمه کاما صفر.

492
00:23:55,000 --> 00:23:59,000
و سپس ما آن را با یک ok اضافه می کنیم.

493
00:23:59,000 --> 00:24:06,000
بنابراین من از این تابع دریافت استفاده می کنم که در فرهنگ لغت موجود است همانطور که قبلاً به شما نشان داده ام.

494
00:24:06,000 --> 00:24:08,000
و من می روم و این کلمه خاص را جستجو می کنم.

495
00:24:08,000 --> 00:24:09,000
باشه

496
00:24:09,000 --> 00:24:12,000
اوه، اگر وجود نداشته باشد، مقدار به صفر اختصاص داده می شود.

497
00:24:12,000 --> 00:24:14,000
در غیر این صورت ما فقط با یک افزایش می دهیم.

498
00:24:14,000 --> 00:24:21,000
و ما قبلاً Dot را در ویدیوهای قبلی خود دیده‌ایم که در مورد دیکشنری‌ها بحث می‌کردیم.

499
00:24:21,000 --> 00:24:24,000
و در نهایت وقتی این کار را انجام داد، من فقط تعداد کلماتم را برمی‌گردانم.

500
00:24:24,000 --> 00:24:29,000
و باید با توجه به این عرض خاص درست در همان خط باشد.

501
00:24:29,000 --> 00:24:33,000
حالا اجازه دهید من ادامه دهم و تابع را در اینجا فراخوانی کنم.

502
00:24:33,000 --> 00:24:36,000
اول از همه باید مسیر فایلم رو درست بدم.

503
00:24:36,000 --> 00:24:37,000
مسیر فایل بسیار ساده است.

504
00:24:37,000 --> 00:24:40,000
در همان محل کار من نمونه فایل txt dot را دارم.

505
00:24:40,000 --> 00:24:42,000
پس این همان فایل است.

506
00:24:42,000 --> 00:24:46,000
در همان محل پوشه من که توابع است وجود دارد.

507
00:24:46,000 --> 00:24:49,000
بنابراین من فقط می روم و این را صدا می کنم.

508
00:24:49,000 --> 00:24:57,000
سپس من قصد دارم از کلمه استفاده کنم فرکانس زیر خط برابر است برای شمارش کلمه زیر خط فرکانس.

509
00:24:57,000 --> 00:25:01,000
و سپس من فقط به مسیر فایل اوکی می دهم.

510
00:25:01,000 --> 00:25:03,000
بنابراین این اساسا مسیر فایل من خواهد بود.

511
00:25:03,000 --> 00:25:08,000
حالا بعد از این من فقط پیش می روم و کلمه فرکانس را چاپ می کنم.

512
00:25:08,000 --> 00:25:09,000
حالا ببینید همه چیز انجام شده است.

513
00:25:09,000 --> 00:25:10,000
بذار اجرا کنم

514
00:25:10,000 --> 00:25:16,000
و همیشه مطمئن شوید که تورفتگی بچه‌ها کلید اصلی است که بسیاری از افراد ممکن است در صورت تورفتگی شما با مشکل مواجه شوند

515
00:25:16,000 --> 00:25:16,000
صحیح نیست

516
00:25:16,000 --> 00:25:22,000
بسیار خوب، پس اگر من ادامه دهم و آن را اجرا کنم، نمی توانم به کلمه متغیر محلی در جایی که مرتبط نیست دسترسی پیدا کنم

517
00:25:22,000 --> 00:25:23,000
با یک ارزش

518
00:25:23,000 --> 00:25:27,000
پس بیایید ببینیم خطا کجاست.

519
00:25:27,000 --> 00:25:31,000
بنابراین فرکانس کلمه کلمه uh فرکانس مسیر فایل pi.

520
00:25:32,000 --> 00:25:38,000
اوم، اگر من به داخل این تابع خاص در داخل این می‌روم، برای کلمات در word okay خواهد بود.

521
00:25:38,000 --> 00:25:39,000
اوه باشه

522
00:25:39,000 --> 00:25:41,000
باید مخالف باشه

523
00:25:41,000 --> 00:25:44,000
بنابراین من فقط ادامه می دهم و این را می نویسم زیرا باید به کلمات دسترسی داشته باشم.

524
00:25:44,000 --> 00:25:46,000
بنابراین در اینجا می توانید ببینید که سلام حضور دارد.

525
00:25:46,000 --> 00:25:47,000
یک کلمه حضور دارد.

526
00:25:47,000 --> 00:25:49,000
همه چیز وجود دارد یک بار خوب است.

527
00:25:49,000 --> 00:25:52,000
پس اجازه دهید ادامه دهم و آن را ذخیره کنم و دوباره بنویسم.

528
00:25:52,000 --> 00:25:54,000
له کن باشه

529
00:25:54,000 --> 00:25:56,000
بنابراین crush دو بار حضور دارد.

530
00:25:56,000 --> 00:25:59,000
بنابراین اگر من جلو بروم و اعدام کنم باید دو بار له شوم.

531
00:25:59,000 --> 00:26:05,000
بنابراین در اینجا crush okay یک مثال ساده از یک تابع برای خواندن یک فایل و شمارش فرکانس هر کدام است

532
00:26:05,000 --> 00:26:05,000
کلمه

533
00:26:05,000 --> 00:26:09,000
بنابراین در اینجا ما یک فایل نمونه گرفته ایم و آن را در حالت خواندن خوانده ایم.

534
00:26:09,000 --> 00:26:11,000
و ما تک تک کلمات را شمرده ایم.

535
00:26:11,000 --> 00:26:12,000
عملکرد شگفت انگیز دوباره.

536
00:26:12,000 --> 00:26:15,000
و امیدوارم چیزهای زیادی از آن یاد بگیرید.

537
00:26:15,000 --> 00:26:18,000
بسیار خوب، در مورد عملیات فایل بیشتر بحث خواهیم کرد.

538
00:26:18,000 --> 00:26:22,000
یک بخش جداگانه وجود دارد که با پیشروی در راه است.

539
00:26:23,000 --> 00:26:24,000
در حال حاضر.

540
00:26:24,000 --> 00:26:25,000
وظیفه نهایی

541
00:26:25,000 --> 00:26:26,000
اوه، این برای شماست

542
00:26:27,000 --> 00:26:29,000
اوم، به هر حال، من کد را به شما می دهم.

543
00:26:29,000 --> 00:26:30,000
باشه

544
00:26:30,000 --> 00:26:32,000
بنابراین در اینجا سوال بسیار ساده است.

545
00:26:32,000 --> 00:26:34,000
شما باید آدرس ایمیل را تأیید کنید.

546
00:26:34,000 --> 00:26:35,000
باشه

547
00:26:35,000 --> 00:26:41,000
بنابراین بیایید بگوییم که شما، اوه، یک اشتراک، اوه، ایمیل هایی وجود دارد که واقعاً می خواهید از آن دریافت کنید

548
00:26:41,000 --> 00:26:41,000
یک شرکت

549
00:26:41,000 --> 00:26:46,000
فرض کنید یک صفحه وجود دارد و مردم پیش می روند و هر ایمیلی را می نویسند و فقط روی شروع اشتراک کلیک می کنند.

550
00:26:46,000 --> 00:26:49,000
درست است، اگر آنها مواد رایگان یا هر چیز دیگری را می خواهند.

551
00:26:49,000 --> 00:26:53,000
اوه، اکنون مشکل این است که ممکن است کسی یک آدرس ایمیل معتبر قرار ندهد.

552
00:26:53,000 --> 00:26:56,000
بنابراین ما نیز باید ایمیل معتبر را بررسی کنیم.

553
00:26:56,000 --> 00:27:00,000
بنابراین برای این، من قبلاً این کد خاص را به شما می دهم.

554
00:27:00,000 --> 00:27:06,000
و شما می توانید ادامه دهید و آن را امتحان کنید و فقط سعی کنید آن را درک کنید در اینجا من از هر کاراکتر خاصی استفاده کرده ام

555
00:27:06,000 --> 00:27:06,000
باشه

556
00:27:06,000 --> 00:27:09,000
باید با این الگو مطابقت داشته باشد.

557
00:27:09,000 --> 00:27:09,000
درسته

558
00:27:09,000 --> 00:27:16,000
مثلاً فرض کنید یکی از آدرس‌های ایمیل من، نام کاربری است که می‌تواند gmail.com باشد.

559
00:27:16,000 --> 00:27:16,000
درسته

560
00:27:16,000 --> 00:27:19,000
بنابراین به طور مشابه این اولین عبارت منظم من است.

561
00:27:19,000 --> 00:27:26,000
می تواند بین A تا z بزرگ E تا z 0 تا 9 به علاوه اوه باشد سپس دوباره اضافه کنید که دوباره آنجا خواهد بود

562
00:27:26,000 --> 00:27:27,000
می تواند جیمیل داشته باشد.

563
00:27:27,000 --> 00:27:28,000
می توانید هات میل داشته باشید.

564
00:27:28,000 --> 00:27:30,000
شما می توانید هر چیزی را یاهو داشته باشید.

565
00:27:30,000 --> 00:27:32,000
و سپس در نهایت.com.

566
00:27:32,000 --> 00:27:32,000
درسته

567
00:27:32,000 --> 00:27:39,000
بنابراین این کل، اوه، تطبیق اوه برای عبارت منظم خواهد بود که بیشتر در مورد منظم صحبت خواهم کرد

568
00:27:39,000 --> 00:27:40,000
بیان، اوه، همانطور که جلوتر می روم.

569
00:27:40,000 --> 00:27:44,000
حالا، اگر من ادامه دهم و این را بررسی کنم، می توانید آن را اینجا ببینید.

570
00:27:44,000 --> 00:27:47,000
می توانید ببینید این ایمیل واقعی من است و این یک ایمیل معتبر است.

571
00:27:47,000 --> 00:27:48,000
این یک ایمیل معتبر نیست.

572
00:27:48,000 --> 00:27:50,000
بنابراین فقط این را مرور کنید و آن را بررسی کنید.

573
00:27:50,000 --> 00:27:55,000
اوه دلیل اینکه من چیزهای جدید جدیدی اضافه می کنم تا فقط با دیدن همه اینها هیجان زده شوید

574
00:27:55,000 --> 00:27:56,000
نوع کاربرد

575
00:27:56,000 --> 00:27:59,000
بنابراین امیدوارم، اوه، این ویدیوی خاص را دوست داشته باشید.

576
00:27:59,000 --> 00:28:01,000
اوه این از طرف من بود

577
00:28:01,000 --> 00:28:02,000
در ویدیوی بعدی شما را خواهم دید.

578
00:28:02,000 --> 00:28:03,000
متشکرم.

